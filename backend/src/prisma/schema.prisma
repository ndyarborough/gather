// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  fullName         String
  password         String
  profilePic       String?
  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")
  hostedEvents     Event[]   @relation("UserHostedEvents")

  attendingEvents  Event[]   @relation("RSVPs")
  interestedEvents Event[]   @relation("Interests")
}

model Event {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  hostId      Int
  host        User     @relation("UserHostedEvents", fields: [hostId], references: [id], onDelete: Cascade)
  image       String?
  attendees   User[]   @relation("RSVPs")
  interested  User[]   @relation("Interests")
}

model Message {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  createdAt  DateTime @default(now())
  eventId    Int?
  sender     User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
}
